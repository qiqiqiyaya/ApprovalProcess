// <auto-generated />
using System;
using Ap.Repository.EfSqlserver;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ap.Repository.EfSqlserver.Migrations
{
    [DbContext(typeof(ApDbContext))]
    partial class ApDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ap.Share.Entities.ManagerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Ap_Manager", (string)null);
                });

            modelBuilder.Entity("Ap.Share.Entities.NextApproverEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ApproverId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TriggeredRecordId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ap_NextApprover", (string)null);
                });

            modelBuilder.Entity("Ap.Share.Entities.OrganizationEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ap_Organization", (string)null);
                });

            modelBuilder.Entity("Ap.Share.Entities.TriggeredRecordEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentState")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DtState")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SourceState")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StateMachineId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Ap_TriggeredRecord", (string)null);
                });

            modelBuilder.Entity("Ap.Share.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ap_User", (string)null);
                });

            modelBuilder.Entity("Ap.Share.Entities.ManagerEntity", b =>
                {
                    b.HasOne("Ap.Share.Entities.OrganizationEntity", "Organization")
                        .WithMany("Managers")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Ap.Share.Entities.OrganizationEntity", b =>
                {
                    b.Navigation("Managers");
                });
#pragma warning restore 612, 618
        }
    }
}
